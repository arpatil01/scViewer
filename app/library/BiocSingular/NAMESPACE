# Generated by roxygen2: do not edit by hand

export(DeferredMatrix)
export(DeferredMatrixSeed)
export(ExactParam)
export(FastAutoParam)
export(IrlbaParam)
export(LowRankMatrix)
export(LowRankMatrixSeed)
export(RandomParam)
export(ResidualMatrix)
export(ResidualMatrixSeed)
export(bsdeferred)
export(bsfold)
export(bsparam)
export(runExactSVD)
export(runIrlbaSVD)
export(runPCA)
export(runRandomSVD)
export(runSVD)
exportClasses(BiocSingularParam)
exportClasses(ExactParam)
exportClasses(FastAutoParam)
exportClasses(IrlbaParam)
exportClasses(LowRankMatrix)
exportClasses(LowRankMatrixSeed)
exportClasses(RandomParam)
exportMethods("[")
exportMethods("dimnames<-")
exportMethods(DelayedArray)
exportMethods(dim)
exportMethods(dimnames)
exportMethods(extract_array)
exportMethods(runPCA)
exportMethods(runSVD)
exportMethods(show)
exportMethods(t)
import(methods)
importClassesFrom(BiocParallel,MulticoreParam)
importClassesFrom(DelayedArray,DelayedMatrix)
importClassesFrom(Matrix,dgCMatrix)
importFrom(BiocGenerics,ncol)
importFrom(BiocGenerics,nrow)
importFrom(BiocParallel,SerialParam)
importFrom(BiocParallel,bpisup)
importFrom(BiocParallel,bpnworkers)
importFrom(BiocParallel,bpstart)
importFrom(BiocParallel,bpstop)
importFrom(DelayedArray,DelayedArray)
importFrom(DelayedArray,currentViewport)
importFrom(DelayedArray,drop)
importFrom(DelayedArray,extract_array)
importFrom(DelayedArray,getAutoBPPARAM)
importFrom(DelayedArray,makeNindexFromArrayViewport)
importFrom(DelayedArray,new_DelayedArray)
importFrom(DelayedArray,seed)
importFrom(DelayedArray,setAutoBPPARAM)
importFrom(DelayedArray,sweep)
importFrom(Matrix,colMeans)
importFrom(Matrix,crossprod)
importFrom(Matrix,t)
importFrom(Matrix,tcrossprod)
importFrom(Rcpp,sourceCpp)
importFrom(S4Vectors,setValidity2)
importFrom(ScaledMatrix,ScaledMatrix)
importFrom(ScaledMatrix,ScaledMatrixSeed)
importFrom(beachmat,colBlockApply)
importFrom(irlba,irlba)
importFrom(methods,hasMethod)
importFrom(methods,is)
importFrom(methods,new)
importFrom(methods,show)
importFrom(rsvd,rsvd)
importFrom(utils,head)
useDynLib(BiocSingular)
